@model NavigationEdge.Models.Component
<!DOCTYPE html>
<html>
<head>
    <title>Navigation Edge</title>
    <style>body{margin:0;background-color:#f8f8f8;font-family:Calibri,Helvetica,Arial,sans-serif}#header{border-bottom:4px solid #de1b1b;margin-bottom:7px}#banner{background-color:#2b2b2b;height:30px;color:#fff;padding:10px 40px;margin-bottom:3px}#content{margin:20px auto 0 auto;width:500px}h1{margin:0 auto;width:300px;font-weight:400}h2{margin:0}p{margin:0 auto;width:700px}table{border-collapse:collapse;margin:0 auto 5px}table,td,th{background-color:#fff;border:1px #2b2b2b solid}th{width:200px;background-color:#de1b1b;color:#fff;font-size:17px;font-weight:400}th,td{padding:4px}td{padding-left:20px}#pager{margin-left:40px}#pager a,#pager span{padding-left:5px}#info{background-color:#fff;border:2px solid #de1b1b;border-radius:10px;padding:10px 30px;margin-top:5px;box-sizing:border-box}.label{margin-left:50px;width:100px;float:left}#content a:link,a:visited{font-weight:700;color:#000}</style>
</head>
<body>
    <div id="header">
        <div id="banner">
        </div>
    </div>
    <h1>Navigation Edge</h1>
    <p>This is an isomorphic web app built using the <a href="http://grahammendick.github.io/navigation/">Navigation router</a> and <a href="http://tjanczuk.github.io/edge/">Edge.js</a>. The UI is written in React and the server and data layer are in C#. It's isomorphic because it can run on both the server and the client. It renders the HTML content on the server first and then, once the JavaScript has downloaded, the client takes over control to prevent full page reloads. Isomorphic web applications are fast and SEO-friendly. You can try it out by throttling the Network using Chrome dev tools. The app remains usable even while the JavaScript is downloading.</p>
    <div id="content">@Html.Raw(Model.Content)</div>
    <script src="/app.js"></script>
    <script>
        StateInfo.register(@Html.Raw(new JavaScriptSerializer().Serialize(Model.Props)));
    </script>
</body>
</html>
